name: 手动打包

on:
  workflow_dispatch:  # 只允许手动触发
    inputs:
      platform:
        description: '选择构建平台'
        required: true
        default: 'windows'
        type: choice
        options:
          - 'windows'
          - 'linux'
          - 'macos-x64'
          - 'macos-arm64'
          - 'all'
      create_release:
        description: '是否创建 Release'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  build-windows:
    name: 打包 Windows 版本
    runs-on: windows-latest
    if: github.event.inputs.platform == 'windows' || github.event.inputs.platform == 'all'
    
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4
      
      - name: 🔧 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 安装依赖
        run: npm ci
      
      - name: 🎨 构建前端
        run: npm run build:renderer

      - name: 📦 打包 Windows 应用
        run: npx electron-builder --win --x64
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
      
      - name: 📊 显示打包结果
        run: |
          Write-Host "=== 打包完成 ===" -ForegroundColor Green
          Write-Host "=== win-unpacked 内容 ===" -ForegroundColor Yellow
          Get-ChildItem build-output\win-unpacked -File | Select-Object -First 10 | ForEach-Object {
            $size = [math]::Round($_.Length / 1MB, 2)
            Write-Host "✓ $($_.Name) - ${size} MB" -ForegroundColor Cyan
          }

      - name: 🗜️ 压缩构建产物
        run: |
          cd build-output\win-unpacked
          Compress-Archive -Path * -DestinationPath ..\..\CFT_windows_x64.zip

      - name: 📤 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: CFT_windows_x64
          path: CFT_windows_x64.zip
          retention-days: 30
      
  build-macos-x64:
    name: 打包 macOS x64 版本
    runs-on: macos-latest
    if: github.event.inputs.platform == 'macos-x64' || github.event.inputs.platform == 'all'

    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🔧 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 安装依赖
        run: npm ci

      - name: 🎨 构建前端
        run: npm run build:renderer

      - name: 🖼️ 创建 macOS 图标
        run: |
          echo "=== 创建 .icns 文件 ==="
          mkdir -p icon.iconset
          sips -z 16 16     assets/icons/icon.png --out icon.iconset/icon_16x16.png
          sips -z 32 32     assets/icons/icon.png --out icon.iconset/icon_16x16@2x.png
          sips -z 32 32     assets/icons/icon.png --out icon.iconset/icon_32x32.png
          sips -z 64 64     assets/icons/icon.png --out icon.iconset/icon_32x32@2x.png
          sips -z 128 128   assets/icons/icon.png --out icon.iconset/icon_128x128.png
          sips -z 256 256   assets/icons/icon.png --out icon.iconset/icon_128x128@2x.png
          sips -z 256 256   assets/icons/icon.png --out icon.iconset/icon_256x256.png
          sips -z 512 512   assets/icons/icon.png --out icon.iconset/icon_256x256@2x.png
          sips -z 512 512   assets/icons/icon.png --out icon.iconset/icon_512x512.png
          sips -z 1024 1024 assets/icons/icon.png --out icon.iconset/icon_512x512@2x.png
          iconutil -c icns icon.iconset -o assets/icons/icon.icns
          echo "✓ 已创建 icon.icns"

      - name: 📦 打包 macOS 应用
        run: npx electron-builder --mac --x64
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: 📊 显示打包结果
        run: |
          echo "=== 打包完成 ==="
          ls -lh build-output/

      - name: 🔄 重命名构建产物
        run: |
          cd build-output
          for file in *.dmg; do
            if [ -f "$file" ]; then
              mv "$file" "CFT_macos_x64.dmg"
              echo "✓ 重命名为 CFT_macos_x64.dmg"
            fi
          done

      - name: 📤 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: CFT_macos_x64
          path: build-output/CFT_macos_x64.dmg
          retention-days: 30

  build-macos-arm64:
    name: 打包 macOS arm64 版本
    runs-on: macos-latest
    if: github.event.inputs.platform == 'macos-arm64' || github.event.inputs.platform == 'all'

    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🔧 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 安装依赖
        run: npm ci

      - name: 🎨 构建前端
        run: npm run build:renderer

      - name: 🖼️ 创建 macOS 图标
        run: |
          echo "=== 创建 .icns 文件 ==="
          mkdir -p icon.iconset
          sips -z 16 16     assets/icons/icon.png --out icon.iconset/icon_16x16.png
          sips -z 32 32     assets/icons/icon.png --out icon.iconset/icon_16x16@2x.png
          sips -z 32 32     assets/icons/icon.png --out icon.iconset/icon_32x32.png
          sips -z 64 64     assets/icons/icon.png --out icon.iconset/icon_32x32@2x.png
          sips -z 128 128   assets/icons/icon.png --out icon.iconset/icon_128x128.png
          sips -z 256 256   assets/icons/icon.png --out icon.iconset/icon_128x128@2x.png
          sips -z 256 256   assets/icons/icon.png --out icon.iconset/icon_256x256.png
          sips -z 512 512   assets/icons/icon.png --out icon.iconset/icon_256x256@2x.png
          sips -z 512 512   assets/icons/icon.png --out icon.iconset/icon_512x512.png
          sips -z 1024 1024 assets/icons/icon.png --out icon.iconset/icon_512x512@2x.png
          iconutil -c icns icon.iconset -o assets/icons/icon.icns
          echo "✓ 已创建 icon.icns"

      - name: 📦 打包 macOS 应用
        run: npx electron-builder --mac --arm64
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: 📊 显示打包结果
        run: |
          echo "=== 打包完成 ==="
          ls -lh build-output/

      - name: 🔄 重命名构建产物
        run: |
          cd build-output
          for file in *.dmg; do
            if [ -f "$file" ]; then
              mv "$file" "CFT_macos_arm64.dmg"
              echo "✓ 重命名为 CFT_macos_arm64.dmg"
            fi
          done

      - name: 📤 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: CFT_macos_arm64
          path: build-output/CFT_macos_arm64.dmg
          retention-days: 30

