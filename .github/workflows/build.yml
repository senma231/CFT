name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build renderer
        run: npm run build:renderer

      - name: Build Windows app
        run: npx electron-builder --win --x64
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: List build output
        run: |
          echo "=== Build output ==="
          dir build-output
          echo "=== win-unpacked content ==="
          dir build-output\win-unpacked

      - name: Compress Windows build
        run: |
          cd build-output
          Compress-Archive -Path win-unpacked -DestinationPath windows-build.zip
          Move-Item windows-build.zip ..

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: windows-build.zip
          retention-days: 7

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build renderer
        run: npm run build:renderer

      - name: Build Linux app
        run: npx electron-builder --linux --x64
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: List build output
        run: |
          echo "=== Build output ==="
          ls -lh build-output/

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            build-output/*.AppImage
            build-output/*.deb
          retention-days: 7

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-build.zip
            *.AppImage
            *.deb
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

